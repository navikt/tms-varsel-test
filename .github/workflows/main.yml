name: "Build and deploy"
on:
  workflow_dispatch:
  push:
    branches:
      - "main"
      - "prod-deploy"

jobs:
  "build":
    name: "build"
    runs-on: "ubuntu-latest"

    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-node@v2"
        with:
          node-version: "16"
          registry-url: "https://npm.pkg.github.com"
          cache: "yarn"
      - name: "Cache node_modules"
        id: "cache-node-modules"
        uses: "actions/cache@v2"
        with:
          path: "node_modules"
          key: "${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}"
      - name: "install dependencies Yarn"
        if: "steps.cache-node-modules.outputs.cache-hit != 'true'"
        run: "yarn install --frozen-lockfile"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Copy env-file for dev
        run: cp .nais/dev.env .env.local
      - name: "Print env"
        run: cat .env.local
      - name: "Bygg klient(yarn run build)"
        run: "yarn run build"
      - name: "Build and push"
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: min-side
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-dev:
    needs: "build"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - name: "Deploy to dev"
        uses: "nais/deploy/actions/deploy@v1"
        env:
          "APIKEY": "${{ secrets.NAIS_DEPLOY_APIKEY }}"
          "CLUSTER": "dev-gcp"
          "RESOURCE": ".nais/dev/nais.yaml"
          "VAR": image=${{ needs.build.outputs.image }},version=${{ github.sha }}

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    needs: "build"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - name: "Deploy to prod"
        uses: "nais/deploy/actions/deploy@v1"
        env:
          "APIKEY": "${{ secrets.NAIS_DEPLOY_APIKEY }}"
          "CLUSTER": "prod-gcp"
          "RESOURCE": ".nais/prod/nais.yaml"
          "VAR": image=${{ needs.build.outputs.image }},version=${{ github.sha }}
